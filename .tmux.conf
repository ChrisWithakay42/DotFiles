# ~/.tmux.conf or ~/Dotfiles/.tmux.conf
# =====================================
#        My Tmux Configuration
# =====================================

#--------------------------------------------------------------------------
# Global Tmux Options
#--------------------------------------------------------------------------

# Set prefix from C-b to C-w
unbind C-b
set-option -g prefix C-w
bind-key C-w send-prefix

# Set shell for tmux (if different from user's default)
# set-option -g default-shell /bin/zsh

set-option -g default-command "${SHELL}"

# Set terminal type for tmux itself and for programs running inside tmux
# "tmux-256color" is recommended.
# If colors are perfect, we avoid `terminal-overrides` for now.
# If you encounter issues, provide `echo $TERM` output from outside and inside tmux.
set-option -g default-terminal "tmux-256color"
# To enable true color (if Alacritty TERM is 'alacritty' or 'xterm-kitty'):
# set-option -ga terminal-overrides ",alacritty:RGB" # or ",xterm-kitty:RGB"

# Reduce escape key delay for faster responsiveness (e.g., in Neovim)
set-option -s escape-time 0

# Start windows and panes at 1, not 0
set-option -g base-index 1
set-option -g pane-base-index 1 # For new panes in existing windows
set-window-option -g pane-base-index 1 # For new panes in new windows
set-option -g renumber-windows on # Renumber windows when one is closed

# Increase scrollback history limit
set-option -g history-limit 50000

# Set environment variables (PATH for commands run by tmux)
# Ensure this includes paths for any tools tmux itself needs or plugins might use.
# set-environment -g PATH "/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"

# Enable mouse support (optional)
# Useful for pane selection/resizing, window selection, and scrolling.
# Can sometimes interfere with text selection for copy-pasting in some apps.
# set-option -g mouse on

# Clipboard integration
# `set-clipboard on` attempts to use system clipboard (e.g., pbcopy/pbpaste on macOS).
# The `tmux-yank` plugin provides more robust clipboard functionality.
set-option -g set-clipboard on


#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# Reload tmux configuration file
# Ensure this path is correct for YOUR configuration file.
bind R source-file ~/.tmux.conf \; display "Reloaded: ~/.tmux.conf"

# --- Pane Management ---
# Splitting panes (maintaining current path)
# Intuitive: | for vertical visual split (horizontal line), \ for horizontal visual split (vertical line)
bind | split-window -v -c "#{pane_current_path}" # Prefix + |
bind '\' split-window -h -c "#{pane_current_path}" # Prefix + \
# Your original bindings (if preferred, uncomment these and comment out the two above):
# bind | split-window -v -c "#{pane_current_path}"
# bind '\' split-window -h -c "#{pane_current_path}"

# Vim-style pane selection (also see vim-tmux-navigator plugin)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing (repeatable with -r)
bind -r H resize-pane -L 5 # Prefix + H (Shift+h)
bind -r J resize-pane -D 5 # Prefix + J (Shift+j)
bind -r K resize-pane -U 5 # Prefix + K (Shift+k)
bind -r L resize-pane -R 5 # Prefix + L (Shift+l)
# Alternative: Prefix + Ctrl + Arrow Keys
# bind -r C-Left resize-pane -L 5
# bind -r C-Right resize-pane -R 5
# bind -r C-Up resize-pane -U 5
# bind -r C-Down resize-pane -D 5
# Your original: Prefix + Arrow keys (may conflict with other bindings if cursor keys used in apps)
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5
bind -r Up resize-pane -U 5
bind -r Down resize-pane -D 5


# --- Copy Mode (Vi style) ---
# Enter copy mode
bind Enter copy-mode # Prefix + Enter

# Set vi keys for copy mode
set-window-option -g mode-keys vi

# Copy mode Vi bindings (tmux-yank plugin enhances 'y')
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle # Ctrl-V for block selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel


# --- Custom Command Bindings ---
# cht.sh script for cheat sheets
# Ensure path and case are correct (e.g., Dotfiles vs DotFiles).
bind-key -r i run-shell "tmux neww ~/Dotfiles/scripts/cht.sh" # Prefix + i

# Lazygit terminal UI for Git
# Ensure lazygit is installed: `brew install lazygit`
# Option 1: Open in a new window
# bind-key g new-window -n 'lazygit' 'lazygit' # Prefix + g
# Option 2: Open in a popup window (requires tmux 3.2+)
bind-key g display-popup -E -w 80% -h 80% 'lazygit' # Prefix + g

# Floating scratchpad window (Prefix + F)
# bind-key P display-popup -d '#{pane_current_path}' -w 85% -h 80% -E "tmux new-session -A -s scratchpad"
# Toggle floating scratchpad window (Prefix + F)
bind-key j run-shell \
    'if tmux list-clients -F "#{client_session}" | grep -q "^scratch$"; then \
        tmux detach-client -s scratch; \
    else \
        tmux new-session -d -s scratch &> /dev/null || true; \
        tmux display-popup -w 95% -h 80% -E "tmux attach-session -t scratch"; \
    fi'
#--------------------------------------------------------------------------
# Status Bar (Theme handled by plugin)
#--------------------------------------------------------------------------

# Set vi keys for status line interaction (e.g., command prompt)
set-option -g status-keys vi

# The `egel/tmux-gruvbox` plugin will style the status bar.
# If further customization is needed, it's often done by overriding plugin settings
# or adding elements to status-left/status-right here (AFTER plugin settings if they conflict).


#--------------------------------------------------------------------------
# Plugin Management (TPM - Tmux Plugin Manager)
#--------------------------------------------------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'                 # TPM itself - KEEP FIRST
set -g @plugin 'egel/tmux-gruvbox'                # Gruvbox theme
set -g @plugin 'tmux-plugins/tmux-resurrect'      # Persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum'      # Automatic saving and restoring of sessions
set -g @plugin 'christoomey/vim-tmux-navigator'   # Seamless navigation between Vim and Tmux panes
set -g @plugin 'tmux-plugins/tmux-yank'           # Enhanced yanking to system clipboard
set -g @plugin 'omerxx/tmux-sessionx'             # FZF-based session management

# --- Plugin Configurations ---

# egel/tmux-gruvbox
set -g @tmux-gruvbox 'dark' # Use 'dark' or 'light'

# omerxx/tmux-sessionx
set -g @sessionx-bind 'o'   # Prefix + o to open sessionx

# tmux-plugins/tmux-continuum (auto-save/restore)
set -g @continuum-restore 'on' # Enable restoring sessions when tmux starts
set -g @continuum-boot 'on'    # Automatically start tmux server and restore session on system boot (if tmux is started)
# set -g @continuum-save-interval '15' # In minutes, default is 15
# For continuum status in status bar (if gruvbox theme doesn't include it):
# set -g @continuum-show-status-option 'on'
# This might need to be integrated into the gruvbox theme's status-right if you want it.
# Example: set -g @gruvbox_status_right_addon_1 '#{continuum_status}'

# christoomey/vim-tmux-navigator
# No specific configuration needed here, it sets up its own bindings (Ctrl+h/j/k/l).


#--------------------------------------------------------------------------
# Initialize TPM (KEEP THIS AT THE VERY END OF YOUR TMUX CONFIG)
#--------------------------------------------------------------------------
# Ensure the path to tpm is correct. Usually ~/.tmux/plugins/tpm/tpm
# If you installed TPM to a different location, adjust this path.
run '~/.tmux/plugins/tpm/tpm'
